library(hierfstat)
?pairwise.fst
install.packages("fstat")
library(adgenet)
library(adegenet)
?pairwise.fst
#Sequence variation
library(stringr)
library(strataG)
install.packages("strataG")
library(gdistance)
library(vegan)
library(knitr)
library(knitr)
pairwise_F<-pairwiseTest(cstr_g,stats="Fst",nrep=1000,quietly=T)
#Sequence variation
library(stringr)
library(strataG)
library(pegas,dependencies=TRUE)
library(raster)
#nucleotide diversity
library(pegas)
#STX in mtDNA
library(strataG)
library(gdistance)
library(ggplot2)
library(vegan)
library(knitr)
pairwise_F<-pairwiseTest(cstr_g,stats="Fst",nrep=1000,quietly=T)
library(tidyverse)
pca <- read_table("RISG.all.eigenvec", col_names = FALSE)
eigenval <- scan("RISG.all.eigenval")
pca_wild <- read_table2("RISG.wild.eigenvec", col_names = FALSE)
eigenval_wild <- scan("RISG.wild.eigenval")
# set names
names(pca)[1] <- "Population"
names(pca)[2] <- "Indv"
names(pca)[3:ncol(pca)] <- paste0("PC", 1:(ncol(pca)-1))
pca <- pca %>% mutate(Population = recode(Population, FI = 'CL1', NEH = 'CL2')) %>%
mutate(Type = ifelse(Population == "CL1" | Population == "CL2", "Commercial", "Wild"))
pve <- data.frame(PC = 1:20, pve = eigenval/sum(eigenval)*100)
PVE_all <- ggplot(pve, aes(PC, pve)) + geom_bar(stat = "identity")+
ylab("Percentage variance explained") + theme_light()+
ggtitle("Percent Variance Explained All Populations")
plot(PVE_all)
PCA_all <- ggplot(pca, aes(PC1, PC2, col = Population)) +
geom_point(size = 3, aes(shape = Type))
PCA_all <- PCA_all + coord_equal() + theme_light() + scale_color_brewer(palette="Set1")
PCA_all <- PCA_all + xlab(paste0("PC1 (", signif(pve$pve[1], 3), "%)")) + ylab(paste0("PC2 (", signif(pve$pve[2], 3), "%)"))+ ggtitle("PC1 vs. PC2 All Populations")
plot(PCA_all)
View(pca)
library(rstatix)
lmer()
library(lme4)
lmer()
PopandSite <- lmer(log(Length) ~ 1+Population+(1|Bag)+(Site), data = All_data)
