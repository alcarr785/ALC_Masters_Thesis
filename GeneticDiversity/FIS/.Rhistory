#PCA Analysis
library(tidyverse)
pca <- read_table2("RISG.eigenvec", col_names = FALSE)
eigenval <- scan("RISG.eigenval")
# set names
names(pca)[1] <- "Population"
names(pca)[2] <- "Indv"
names(pca)[3:ncol(pca)] <- paste0("PC", 1:(ncol(pca)-1))
View(pca)
pve <- data.frame(PC = 1:20, pve = eigenval/sum(eigenval)*100)
a <- ggplot(pve, aes(PC, pve)) + geom_bar(stat = "identity")
a + ylab("Percentage variance explained") + theme_light()
b <- ggplot(bystate_pca, aes(PC1, PC2, col = State)) + geom_point(size = 3)
b <- b + coord_equal() + theme_light()
b + xlab(paste0("PC1 (", signif(pve$pve[1], 3), "%)")) + ylab(paste0("PC2 (", signif(pve$pve[2], 3), "%)"))
plot(b)
b <- ggplot(pca, aes(PC1, PC2, col = Population)) + geom_point(size = 3)
b <- b + coord_equal() + theme_light()
b + xlab(paste0("PC1 (", signif(pve$pve[1], 3), "%)")) + ylab(paste0("PC2 (", signif(pve$pve[2], 3), "%)"))
b <- ggplot(pca, aes(PC3, PC4, col = Population)) + geom_point(size = 3)
b <- b + coord_equal() + theme_light()
b + xlab(paste0("PC1 (", signif(pve$pve[1], 3), "%)")) + ylab(paste0("PC2 (", signif(pve$pve[2], 3), "%)"))
plot(b)
b <- ggplot(pca, aes(PC1, PC2, col = Population)) + geom_point(size = 3)
b <- b + coord_equal() + theme_light()
b + xlab(paste0("PC1 (", signif(pve$pve[1], 3), "%)")) + ylab(paste0("PC2 (", signif(pve$pve[2], 3), "%)"))
plot(b)
pve <- data.frame(PC = 1:20, pve = eigenval/sum(eigenval)*100)
a <- ggplot(pve, aes(PC, pve)) + geom_bar(stat = "identity")
a + ylab("Percentage variance explained") + theme_light()
b <- ggplot(pca, aes(PC1, PC2, col = Population)) + geom_point(size = 3)
b <- b + coord_equal() + theme_light()
b + xlab(paste0("PC1 (", signif(pve$pve[1], 3), "%)")) + ylab(paste0("PC2 (", signif(pve$pve[2], 3), "%)"))
plot(b)
b <- ggplot(pca, aes(PC1, PC2, col = Population)) + geom_point(size = 3)
b <- b + coord_equal() + theme_light()
#PCA Analysis
library(tidyverse)
b <- ggplot(pca, aes(PC1, PC2, col = Population)) + geom_point(size = 3)
b <- b + coord_equal() + theme_light()
b + xlab(paste0("PC1 (", signif(pve$pve[1], 3), "%)")) + ylab(paste0("PC2 (", signif(pve$pve[2], 3), "%)"))
library(tidyverse)
pca <- read_table2("RISG_all.eigenvec", col_names = FALSE)
eigenval <- scan("RISG_all.eigenval")
# set names
names(pca)[1] <- "Population"
names(pca)[2] <- "Indv"
names(pca)[3:ncol(pca)] <- paste0("PC", 1:(ncol(pca)-1))
pca <- as.tibble(data.frame(pca, Population))
pve <- data.frame(PC = 1:20, pve = eigenval/sum(eigenval)*100)
a <- ggplot(pve, aes(PC, pve)) + geom_bar(stat = "identity")
a + ylab("Percentage variance explained") + theme_light()
b <- ggplot(pca, aes(PC1, PC2, col = Population)) + geom_point(size = 3)
b <- b + coord_equal() + theme_light()
b + xlab(paste0("PC1 (", signif(pve$pve[1], 3), "%)")) + ylab(paste0("PC2 (", signif(pve$pve[2], 3), "%)"))
plot(b)
library(readxl)
Master_raw <- read_excel("C:/Users/angel/Downloads/Master Spreadsheet 2023 05 15.xlsx",
sheet = "QAQCMarch23 USE THIS")
View(Master_raw)
#Yield
yield <- Master_raw %>% mutate(Date = as.character(Date)) %>%
mutate(Lineage = recode(Lineage, FI="CL1", NEH="CL2")) %>%
filter(Date == "2022-10-19", Status == "alive") %>%
filter(!`Pit Tag End Num` == "no tag") %>%
select(Lineage, `Oyster Number`, Length, `Bag Number`) %>%
group_by(Lineage, `Bag Number`) %>%
#  summarize(Total_yield = sum(Length)) %>%
mutate(Type = ifelse(Lineage == "CL1" | Lineage == "CL2", "Commercial", "Wild")) %>%
mutate(Rm = ifelse(Lineage == "GH" & `Bag Number` == "1", 1, 0))
library(tidyverse)
library(ggplot2)
#Yield
yield <- Master_raw %>% mutate(Date = as.character(Date)) %>%
mutate(Lineage = recode(Lineage, FI="CL1", NEH="CL2")) %>%
filter(Date == "2022-10-19", Status == "alive") %>%
filter(!`Pit Tag End Num` == "no tag") %>%
select(Lineage, `Oyster Number`, Length, `Bag Number`) %>%
group_by(Lineage, `Bag Number`) %>%
#  summarize(Total_yield = sum(Length)) %>%
mutate(Type = ifelse(Lineage == "CL1" | Lineage == "CL2", "Commercial", "Wild")) %>%
mutate(Rm = ifelse(Lineage == "GH" & `Bag Number` == "1", 1, 0))
View(yield)
ggplot(yield, aes(x=Lineage, y=Length, fill = Type))+
geom_boxplot()+
labs(y="Yield (Shell Length in mm)")+
ggtitle("Average Oyster Yield per Lineage")
summary(yield)
summary(yield$Length)
#Yield
yield <- Master_raw %>% mutate(Date = as.character(Date)) %>%
mutate(Lineage = recode(Lineage, FI="CL1", NEH="CL2")) %>%
filter(Date == "2022-10-19", Status == "alive") %>%
filter(!`Pit Tag End Num` == "no tag") %>%
select(Lineage, `Oyster Number`, Length, `Bag Number`) %>%
group_by(Lineage, `Bag Number`) %>%
as.number(Length)%>%
#  summarize(Total_yield = sum(Length)) %>%
mutate(Type = ifelse(Lineage == "CL1" | Lineage == "CL2", "Commercial", "Wild")) %>%
mutate(Rm = ifelse(Lineage == "GH" & `Bag Number` == "1", 1, 0))
#Yield
yield <- Master_raw %>% mutate(Date = as.character(Date)) %>%
mutate(Lineage = recode(Lineage, FI="CL1", NEH="CL2")) %>%
filter(Date == "2022-10-19", Status == "alive") %>%
filter(!`Pit Tag End Num` == "no tag") %>%
select(Lineage, `Oyster Number`, Length, `Bag Number`) %>%
group_by(Lineage, `Bag Number`) %>%
as.numeric(Length)%>%
#  summarize(Total_yield = sum(Length)) %>%
mutate(Type = ifelse(Lineage == "CL1" | Lineage == "CL2", "Commercial", "Wild")) %>%
mutate(Rm = ifelse(Lineage == "GH" & `Bag Number` == "1", 1, 0))
#Yield
yield <- Master_raw %>% mutate(Date = as.character(Date)) %>%
mutate(Lineage = recode(Lineage, FI="CL1", NEH="CL2")) %>%
filter(Date == "2022-10-19", Status == "alive") %>%
filter(!`Pit Tag End Num` == "no tag") %>%
select(Lineage, `Oyster Number`, Length, `Bag Number`) %>%
group_by(Lineage, `Bag Number`) %>%
Length as.numeric(Length)%>%
#  summarize(Total_yield = sum(Length)) %>%
mutate(Type = ifelse(Lineage == "CL1" | Lineage == "CL2", "Commercial", "Wild")) %>%
mutate(Rm = ifelse(Lineage == "GH" & `Bag Number` == "1", 1, 0))
summary(yield$Length)
#Yield
yield <- Master_raw %>% mutate(Date = as.character(Date)) %>%
mutate(Lineage = recode(Lineage, FI="CL1", NEH="CL2")) %>%
filter(Date == "2022-10-19", Status == "alive") %>%
filter(!`Pit Tag End Num` == "no tag") %>%
select(Lineage, `Oyster Number`, Length, `Bag Number`) %>%
group_by(Lineage, `Bag Number`) %>%
Length = as.numeric(Length)%>%
#  summarize(Total_yield = sum(Length)) %>%
mutate(Type = ifelse(Lineage == "CL1" | Lineage == "CL2", "Commercial", "Wild")) %>%
mutate(Rm = ifelse(Lineage == "GH" & `Bag Number` == "1", 1, 0))
library(adegenet)
library(hierfstat)
RISG_stats <- basic.stats(RISG)
RISG <- read.genetix('RISG.gtx')
RISG_stats <- basic.stats(RISG)
View(RISG_stats)
RISG_fst <- pairwise.WCfst(RISG)
View(RISG_stats)
View(RISG_stats)
View(RISG_fst)
View(RISG_stats)
View(RISG_stats$pop.freq)
View(RISG_stats$n.ind.samp)
View(RISG_stats$Hs)
summary(RISG_stats$Hs)
summary(RISG_stats$Ho)
View(RISG_stats$Ho)
View(RISG_stats$perloc)
View(RISG_stats$n.ind.samp)
View(RISG_stats$overall)
View(RISG_stats$Ho)
#PCA Analysis
library(tidyverse)
pca <- read_table2("RISG_all.eigenvec", col_names = FALSE)
eigenval <- scan("RISG_all.eigenval")
# set names
names(pca)[1] <- "Population"
names(pca)[2] <- "Indv"
names(pca)[3:ncol(pca)] <- paste0("PC", 1:(ncol(pca)-1))
pca <- as.tibble(data.frame(pca, Population))
pve <- data.frame(PC = 1:20, pve = eigenval/sum(eigenval)*100)
a <- ggplot(pve, aes(PC, pve)) + geom_bar(stat = "identity")
a + ylab("Percentage variance explained") + theme_light()
b <- ggplot(pca, aes(PC1, PC2, col = Population)) + geom_point(size = 3)
b <- b + coord_equal() + theme_light()
b + xlab(paste0("PC1 (", signif(pve$pve[1], 3), "%)")) + ylab(paste0("PC2 (", signif(pve$pve[2], 3), "%)"))
plot(b)
setwd("C:/Users/angel/OneDrive/Documents/Masters Work/Lab Work/ALC_Masters_Thesis/GeneticDiversity/FIS")
library(tidyverse)
fis_df <- read.csv("FIS.all") %>%
mutate(FID = recode(FID, FI = "CL1", NEH = "CL2")) %>%
mutate(Type = ifelse(FID == "CL1" | FID == "CL2", "Commercial", "Wild"))
FIS <- read.csv("C:/Users/angel/OneDrive/Documents/Masters Work/Lab Work/ALC_Masters_Thesis/GeneticDiversity/FIS/FIS.all", sep="")
View(FIS)
View(b)
View(FIS)
library(tidyverse)
fis_df <- FIS %>%
mutate(FID = recode(FID, FI = "CL1", NEH = "CL2")) %>%
mutate(Type = ifelse(FID == "CL1" | FID == "CL2", "Commercial", "Wild"))
View(fis_df)
#First we test for normality using a Kolmogorov-Smirnov Test
lapply(split(fis_df$F, fis_df$FID), ks.test, "pnorm")
#The data is not normally distributed, we should proceed with a Kruskall test
kruskal.test(fis_df$F ~ fis_df$FID)
#The populations are significantly different, we should use a Dunn-Test post-hoc
dunn.test(fis_df$F, g = fis_df$FID, method  = "bonferroni")
library(dunn.test)
#First we test for normality using a Kolmogorov-Smirnov Test
lapply(split(fis_df$F, fis_df$FID), ks.test, "pnorm")
#The data is not normally distributed, we should proceed with a Kruskall test
kruskal.test(fis_df$F ~ fis_df$FID)
#The populations are significantly different, we should use a Dunn-Test post-hoc
dunn.test(fis_df$F, g = fis_df$FID, method  = "bonferroni")
FIS <- ggplot(fis_df, aes(x=FID, y=F, fill = Type)) + geom_boxplot()+
xlab("Population")+
ylab(bquote(F[IS]))+
ggtitle(bquote(F[IS]*" per Population")) + ylim(-1,1)
plot(FIS)
FisHist <- ggplot(aes(x=F, col=I("black"), fill=Type), data = fis_df) +   geom_histogram() +
facet_wrap(~ FID)
plot(FisHist)
