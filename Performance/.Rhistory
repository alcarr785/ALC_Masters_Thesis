plot(resKM, mark.time = FALSE, xlab = "AFT Residuals", ylab = "Survival Probability")
xx <- seq(min(resids), max(resids), length.out = 35)
yy <- exp(- exp(xx))
lines(xx, yy, col = "red", lwd = 2)
legend("bottomleft", c("KM estimate", "95% CI KM estimate",
"Survival function of Extreme Value distribution"),
lty = c(1,2,1), col = c(1,1,2), bty = "n")
library(survival)
SurvPopandSite <- survreg(Surv(Age, Status) ~ Population, data = All_Surv, dist = "weibull")
SurvPopxSite <- survreg(Surv(log(Age), Status) ~ Population*Site, data = All_Surv, dist = "weibull")
summary(SurvPopxSite)
fitted_values <- SurvPopxSite$linear.predictors
resids <- (log(SurvPopxSite$y[, 1]) - fitted_values) / SurvPopxSite$scale
resKM <- survfit(Surv(resids, Status) ~ 1, data = All_Surv)
plot(resKM, mark.time = FALSE, xlab = "AFT Residuals", ylab = "Survival Probability")
xx <- seq(min(resids), max(resids), length.out = 35)
yy <- exp(- exp(xx))
lines(xx, yy, col = "red", lwd = 2)
legend("bottomleft", c("KM estimate", "95% CI KM estimate",
"Survival function of Extreme Value distribution"),
lty = c(1,2,1), col = c(1,1,2), bty = "n")
pam.survreg(SurvPopxSite)
install.packages("PAmeasures")
library(PAmeasures)
pam.survreg(SurvPopxSite)
library(survival)
SurvPopandSite <- survreg(Surv(Age, Status) ~ Population, data = All_Surv, dist = "weibull")
SurvPopxSite <- survreg(Surv(log(Age), Status) ~ Population*Site, data = All_Surv, dist = "weibull")
summary(SurvPopxSite)
fitted_values <- SurvPopxSite$linear.predictors
resids <- (log(SurvPopxSite$y[, 1]) - fitted_values) / SurvPopxSite$scale
resKM <- survfit(Surv(resids, Status) ~ 1, data = All_Surv)
plot(resKM, mark.time = FALSE, xlab = "AFT Residuals", ylab = "Survival Probability")
xx <- seq(min(resids), max(resids), length.out = 35)
yy <- exp(- exp(xx))
lines(xx, yy, col = "red", lwd = 2)
legend("bottomleft", c("KM estimate", "95% CI KM estimate",
"Survival function of Extreme Value distribution"),
lty = c(1,2,1), col = c(1,1,2), bty = "n")
pam.survreg(SurvPopxSite)
traceback()
?pam.censor
p <- predict(SurvPopxSite)
with(All_data, pam.censor(Age, p, Status))
with(All_Surv, pam.censor(Age, p, Status))
library(survival)
SurvPopandSite <- survreg(Surv(Age, Status) ~ Population, data = All_Surv, dist = "weibull")
SurvPopxSite <- survreg(Surv(log(Age), Status) ~ Population*Site, data = All_Surv, dist = "weibull")
summary(SurvPopxSite)
fitted_values <- SurvPopxSite$linear.predictors
resids <- (log(SurvPopxSite$y[, 1]) - fitted_values) / SurvPopxSite$scale
resKM <- survfit(Surv(resids, Status) ~ 1, data = All_Surv)
plot(resKM, mark.time = FALSE, xlab = "AFT Residuals", ylab = "Survival Probability")
xx <- seq(min(resids), max(resids), length.out = 35)
yy <- exp(- exp(xx))
lines(xx, yy, col = "red", lwd = 2)
legend("bottomleft", c("KM estimate", "95% CI KM estimate",
"Survival function of Extreme Value distribution"),
lty = c(1,2,1), col = c(1,1,2), bty = "n")
p <- predict(SurvPopxSite, type = "response")
with(All_Surv, pam.censor(Age, p, Status))
library(survival)
SurvPopandSite <- survreg(Surv(Age, Status) ~ Population, data = All_Surv, dist = "weibull")
SurvPopxSite <- survreg(Surv(Age, Status) ~ Population*Site, data = All_Surv, dist = "weibull")
summary(SurvPopxSite)
fitted_values <- SurvPopxSite$linear.predictors
resids <- (log(SurvPopxSite$y[, 1]) - fitted_values) / SurvPopxSite$scale
resKM <- survfit(Surv(resids, Status) ~ 1, data = All_Surv)
plot(resKM, mark.time = FALSE, xlab = "AFT Residuals", ylab = "Survival Probability")
xx <- seq(min(resids), max(resids), length.out = 35)
yy <- exp(- exp(xx))
lines(xx, yy, col = "red", lwd = 2)
legend("bottomleft", c("KM estimate", "95% CI KM estimate",
"Survival function of Extreme Value distribution"),
lty = c(1,2,1), col = c(1,1,2), bty = "n")
p <- predict(SurvPopxSite, type = "response")
with(All_Surv, pam.censor(Age, p, Status))
library(survival)
SurvPop <- survreg(Surv(Age, Status) ~ Population, data = All_Surv, dist = "weibull")
SurvSite <- survreg(Surv(Age, Status) ~ Site, data = All_Surv, dist = "weibull")
SurvPopandSite <- survreg(Surv(Age, Status) ~ Population+Site, data = All_Surv, dist = "weibull")
SurvPopxSite <- survreg(Surv(Age, Status) ~ Population*Site, data = All_Surv, dist = "weibull")
summary(SurvPopxSite)
fitted_values <- SurvPopxSite$linear.predictors
resids <- (log(SurvPopxSite$y[, 1]) - fitted_values) / SurvPopxSite$scale
resKM <- survfit(Surv(resids, Status) ~ 1, data = All_Surv)
plot(resKM, mark.time = FALSE, xlab = "AFT Residuals", ylab = "Survival Probability")
xx <- seq(min(resids), max(resids), length.out = 35)
yy <- exp(- exp(xx))
lines(xx, yy, col = "red", lwd = 2)
legend("bottomleft", c("KM estimate", "95% CI KM estimate",
"Survival function of Extreme Value distribution"),
lty = c(1,2,1), col = c(1,1,2), bty = "n")
p <- predict(SurvPopxSite, type = "response")
with(All_Surv, pam.censor(Age, p, Status))
library(survival)
SurvPop <- survreg(Surv(Age, Status) ~ Population, data = All_Surv, dist = "weibull")
summary(SurvPop)
SurvSite <- survreg(Surv(Age, Status) ~ Site, data = All_Surv, dist = "weibull")
summary(SurvSite)
SurvPopandSite <- survreg(Surv(Age, Status) ~ Population+Site, data = All_Surv, dist = "weibull")
SurvPopxSite <- survreg(Surv(Age, Status) ~ Population*Site, data = All_Surv, dist = "weibull")
summary(SurvPopxSite)
fitted_values <- SurvPopxSite$linear.predictors
resids <- (log(SurvPopxSite$y[, 1]) - fitted_values) / SurvPopxSite$scale
resKM <- survfit(Surv(resids, Status) ~ 1, data = All_Surv)
plot(resKM, mark.time = FALSE, xlab = "AFT Residuals", ylab = "Survival Probability")
xx <- seq(min(resids), max(resids), length.out = 35)
yy <- exp(- exp(xx))
lines(xx, yy, col = "red", lwd = 2)
legend("bottomleft", c("KM estimate", "95% CI KM estimate",
"Survival function of Extreme Value distribution"),
lty = c(1,2,1), col = c(1,1,2), bty = "n")
p <- predict(SurvPopxSite, type = "response")
with(All_Surv, pam.censor(Age, p, Status))
library(survival)
SurvPop <- survreg(Surv(Age, Status) ~ Population, data = All_Surv, dist = "weibull")
summary(SurvPop)
SurvSite <- survreg(Surv(Age, Status) ~ Site, data = All_Surv, dist = "weibull")
summary(SurvSite)
SurvPopandSite <- survreg(Surv(Age, Status) ~ Population+Site, data = All_Surv, dist = "weibull")
SurvPopxSite <- survreg(Surv(Age, Status) ~ Population*Site, data = All_Surv, dist = "weibull")
summary(SurvPopxSite)
fitted_values <- SurvPopxSite$linear.predictors
resids <- (log(SurvPopxSite$y[, 1]) - fitted_values) / SurvPopxSite$scale
resKM <- survfit(Surv(resids, Status) ~ 1, data = All_Surv)
plot(resKM, mark.time = FALSE, xlab = "AFT Residuals", ylab = "Survival Probability")
xx <- seq(min(resids), max(resids), length.out = 35)
yy <- exp(- exp(xx))
lines(xx, yy, col = "red", lwd = 2)
legend("bottomleft", c("KM estimate", "95% CI KM estimate",
"Survival function of Extreme Value distribution"),
lty = c(1,2,1), col = c(1,1,2), bty = "n")
p <- predict(SurvPop, type = "response")
with(All_Surv, pam.censor(Age, p, Status))
?survreg
Survival <- survreg(Surv(Age ~ 1, data = All_surv, dist = "weibull"))
Survival <- survreg(Surv(Age, Status) ~ 1, data = All_surv, dist = "weibull"))
Survival <- survreg(Surv(Age, Status) ~ 1, data = All_surv, dist = "weibull")
Survival <- survreg(Surv(Age, Status) ~ 1, data = All_Surv, dist = "weibull")
Survival <- survreg(Surv(Age, Status) ~ 1, data = All_Surv, dist = "weibull")
p <- predict(Survival, type = "response")
with(All_Surv, pam.censor(Age, p, Status))
Survival <- survreg(Surv(Age, Status) ~ 1, data = All_Surv, dist = "exponential")
p <- predict(Survival, type = "response")
with(All_Surv, pam.censor(Age, p, Status))
Survival <- survreg(Surv(Age, Status) ~ 1, data = All_Surv, dist = "gaussian")
p <- predict(Survival, type = "response")
with(All_Surv, pam.censor(Age, p, Status))
Survival <- survreg(Surv(Age, Status) ~ 1, data = All_Surv, dist = "logistic")
p <- predict(Survival, type = "response")
with(All_Surv, pam.censor(Age, p, Status))
Survival <- survreg(Surv(Age, Status) ~ 1, data = All_Surv, dist = "lognormal")
p <- predict(Survival, type = "response")
with(All_Surv, pam.censor(Age, p, Status))
Survival <- survreg(Surv(Age, Status) ~ 1, data = All_Surv, dist = "loglogistic")
p <- predict(Survival, type = "response")
with(All_Surv, pam.censor(Age, p, Status))
library(survival)
SurvPop <- survreg(Surv(Age, Status) ~ Population, data = All_Surv, dist = "weibull")
summary(SurvPop)
SurvSite <- survreg(Surv(Age, Status) ~ Site, data = All_Surv, dist = "weibull")
summary(SurvSite)
SurvPopandSite <- survreg(Surv(Age, Status) ~ Population+Site, data = All_Surv, dist = "weibull")
SurvPopxSite <- survreg(Surv(Age, Status) ~ Population*Site, data = All_Surv, dist = "loglogistic")
summary(SurvPopxSite)
fitted_values <- SurvPopxSite$linear.predictors
resids <- (log(SurvPopxSite$y[, 1]) - fitted_values) / SurvPopxSite$scale
resKM <- survfit(Surv(resids, Status) ~ 1, data = All_Surv)
plot(resKM, mark.time = FALSE, xlab = "AFT Residuals", ylab = "Survival Probability")
xx <- seq(min(resids), max(resids), length.out = 35)
yy <- exp(- exp(xx))
lines(xx, yy, col = "red", lwd = 2)
legend("bottomleft", c("KM estimate", "95% CI KM estimate",
"Survival function of Extreme Value distribution"),
lty = c(1,2,1), col = c(1,1,2), bty = "n")
p <- predict(SurvPop, type = "response")
with(All_Surv, pam.censor(Age, p, Status))
library(survival)
SurvPop <- survreg(Surv(Age, Status) ~ Population, data = All_Surv, dist = "weibull")
summary(SurvPop)
SurvSite <- survreg(Surv(Age, Status) ~ Site, data = All_Surv, dist = "weibull")
summary(SurvSite)
SurvPopandSite <- survreg(Surv(Age, Status) ~ Population+Site, data = All_Surv, dist = "weibull")
SurvPopxSite <- survreg(Surv(Age, Status) ~ Population*Site, data = All_Surv, dist = "weibull")
summary(SurvPopxSite)
fitted_values <- SurvPopxSite$linear.predictors
resids <- (log(SurvPopxSite$y[, 1]) - fitted_values) / SurvPopxSite$scale
resKM <- survfit(Surv(resids, Status) ~ 1, data = All_Surv)
plot(resKM, mark.time = FALSE, xlab = "AFT Residuals", ylab = "Survival Probability")
xx <- seq(min(resids), max(resids), length.out = 35)
yy <- exp(- exp(xx))
lines(xx, yy, col = "red", lwd = 2)
legend("bottomleft", c("KM estimate", "95% CI KM estimate",
"Survival function of Extreme Value distribution"),
lty = c(1,2,1), col = c(1,1,2), bty = "n")
p <- predict(SurvPop, type = "response")
with(All_Surv, pam.censor(Age, p, Status))
Survival <- survreg(Surv(Age, Status) ~ 1, data = All_Surv, dist = "weibull")
p <- predict(Survival, type = "response")
with(All_Surv, pam.censor(Age, p, Status))
Survival <- survreg(Surv(Age, Status) ~ 1, data = All_Surv, dist = "gaussian")
p <- predict(Survival, type = "response")
with(All_Surv, pam.censor(Age, p, Status))
Survival <- survreg(Surv(Age, Status) ~ 1, data = All_Surv, dist = "exponential")
p <- predict(Survival, type = "response")
with(All_Surv, pam.censor(Age, p, Status))
Survival <- survreg(Surv(Age, Status) ~ Population, data = All_Surv, dist = "weibull")
p <- predict(Survival, type = "response")
with(All_Surv, pam.censor(Age, p, Status))
Survival <- survreg(Surv(Age, Status) ~ Site, data = All_Surv, dist = "weibull")
p <- predict(Survival, type = "response")
with(All_Surv, pam.censor(Age, p, Status))
Survival <- survreg(Surv(Age, Status) ~ Site*Year, data = All_Surv, dist = "weibull")
p <- predict(Survival, type = "response")
with(All_Surv, pam.censor(Age, p, Status))
Survival <- survreg(Surv(Age, Status) ~ Year, data = All_Surv, dist = "weibull")
p <- predict(Survival, type = "response")
with(All_Surv, pam.censor(Age, p, Status))
install.packages("weibullness")
library(weibullness)
help(weibullness)
library(survival)
SurvPop <- survreg(Surv(Age, Status) ~ Population, data = All_Surv, dist = "weibull")
summary(SurvPop)
SurvSite <- survreg(Surv(Age, Status) ~ Site, data = All_Surv, dist = "weibull")
summary(SurvSite)
SurvPopandSite <- survreg(Surv(Age, Status) ~ Population+Site, data = All_Surv, dist = "weibull")
SurvPopxSite <- survreg(Surv(Age, Status) ~ Population*Site, data = All_Surv, dist = "weibull")
summary(SurvPopxSite)
fitted_values <- SurvPopxSite$linear.predictors
resids <- (log(SurvPopxSite$y[, 1]) - fitted_values) / SurvPopxSite$scale
resKM <- survfit(Surv(resids, Status) ~ 1, data = All_Surv)
plot(resKM, mark.time = FALSE, xlab = "AFT Residuals", ylab = "Survival Probability")
xx <- seq(min(resids), max(resids), length.out = 35)
yy <- exp(- exp(xx))
lines(xx, yy, col = "red", lwd = 2)
legend("bottomleft", c("KM estimate", "95% CI KM estimate",
"Survival function of Extreme Value distribution"),
lty = c(1,2,1), col = c(1,1,2), bty = "n")
p <- predict(SurvPop, type = "response")
with(All_Surv, pam.censor(Age, p, Status))
anova(SurvPopandSite, SurvPopxSite)
library(dunn.test)
shapiro.test(All_data$Length)
kruskal.test(All_data$Length ~ All_data$Population)
dunn.test(All_data$Length, g = All_data$Population, method  = "bonferroni")
library(survival)
SurvPop <- survreg(Surv(Age, Status) ~ Population, data = All_Surv, dist = "weibull")
summary(SurvPop)
SurvSite <- survreg(Surv(Age, Status) ~ Site, data = All_Surv, dist = "weibull")
summary(SurvSite)
SurvPopandSite <- survreg(Surv(Age, Status) ~ Population+Site, data = All_Surv, dist = "weibull")
SurvPopxSite <- survreg(Surv(Age, Status) ~ Population*Site, data = All_Surv, dist = "weibull")
summary(SurvPopxSite)
fitted_values <- SurvPopxSite$linear.predictors
resids <- (log(SurvPopxSite$y[, 1]) - fitted_values) / SurvPopxSite$scale
resKM <- survfit(Surv(resids, Status) ~ 1, data = All_Surv)
plot(resKM, mark.time = FALSE, xlab = "AFT Residuals", ylab = "Survival Probability")
xx <- seq(min(resids), max(resids), length.out = 35)
yy <- exp(- exp(xx))
lines(xx, yy, col = "red", lwd = 2)
legend("bottomleft", c("KM estimate", "95% CI KM estimate",
"Survival function of Extreme Value distribution"),
lty = c(1,2,1), col = c(1,1,2), bty = "n")
p <- predict(SurvPopxSite, type = "response")
with(All_Surv, pam.censor(Age, p, Status))
library(survival)
library(PAmeasures)
SurvPop <- survreg(Surv(Age, Status) ~ Population, data = All_Surv, dist = "weibull")
summary(SurvPop)
SurvSite <- survreg(Surv(Age, Status) ~ Site, data = All_Surv, dist = "weibull")
summary(SurvSite)
SurvPopandSite <- survreg(Surv(Age, Status) ~ Population+Site, data = All_Surv, dist = "weibull")
SurvPopxSite <- survreg(Surv(Age, Status) ~ Population*Site, data = All_Surv, dist = "weibull")
summary(SurvPopxSite)
fitted_values <- SurvPopxSite$linear.predictors
resids <- (log(SurvPopxSite$y[, 1]) - fitted_values) / SurvPopxSite$scale
resKM <- survfit(Surv(resids, Status) ~ 1, data = All_Surv)
plot(resKM, mark.time = FALSE, xlab = "AFT Residuals", ylab = "Survival Probability")
xx <- seq(min(resids), max(resids), length.out = 35)
yy <- exp(- exp(xx))
lines(xx, yy, col = "red", lwd = 2)
legend("bottomleft", c("KM estimate", "95% CI KM estimate",
"Survival function of Extreme Value distribution"),
lty = c(1,2,1), col = c(1,1,2), bty = "n")
p <- predict(SurvPopxSite, type = "response")
with(All_Surv, pam.censor(Age, p, Status))
anova(SurvPopandSite, SurvPopxSite)
Disease <- read.csv("Disease2022.csv")
Disease <- read.csv("Disease2022.csv")
disease <- Disease_Data_2022 %>% mutate(Lineage = recode(Lineage, FI="CL1", NEH="CL2")) %>%
mutate(Type = ifelse(Lineage == "CL1" | Lineage == "CL2", "Commercial", "Wild"))
library(tidyverse)
Disease <- read.csv("Disease2022.csv")
disease <- Disease_Data_2022 %>% mutate(Lineage = recode(Lineage, FI="CL1", NEH="CL2")) %>%
mutate(Type = ifelse(Lineage == "CL1" | Lineage == "CL2", "Commercial", "Wild"))
library(tidyverse)
Disease <- read.csv("Disease2022.csv") %>% mutate(Lineage = recode(Lineage, FI="CL1", NEH="CL2")) %>%
mutate(Type = ifelse(Lineage == "CL1" | Lineage == "CL2", "Commercial", "Wild"))
disease_intensity <- disease %>%
subset(`Sample ID` != 'NR-209') %>%
group_by(Lineage, Type) %>%
mutate(Dermo_Infected = ifelse(`Dermo Cq` > 0, 1, 0)) %>%
mutate(MSX_Infected = ifelse(`MSX Cq` > 0, 1, 0)) %>%
mutate(SSO_Infected = ifelse(`SSO Cq` > 0, 1, 0)) %>%
summarize(Dermo_Intensity = sum(Dermo_Infected/n()), MSX_Intensity = sum(MSX_Infected/n()), SSO_Intensity = sum(SSO_Infected/n()))
library(tidyverse)
Disease <- read.csv("Disease2022.csv") %>% mutate(Lineage = recode(Lineage, FI="CL1", NEH="CL2")) %>%
mutate(Type = ifelse(Lineage == "CL1" | Lineage == "CL2", "Commercial", "Wild"))
disease_intensity <- Disease %>%
subset(`Sample ID` != 'NR-209') %>%
group_by(Lineage, Type) %>%
mutate(Dermo_Infected = ifelse(`Dermo Cq` > 0, 1, 0)) %>%
mutate(MSX_Infected = ifelse(`MSX Cq` > 0, 1, 0)) %>%
mutate(SSO_Infected = ifelse(`SSO Cq` > 0, 1, 0)) %>%
summarize(Dermo_Intensity = sum(Dermo_Infected/n()), MSX_Intensity = sum(MSX_Infected/n()), SSO_Intensity = sum(SSO_Infected/n()))
library(tidyverse)
Disease <- read.csv("Disease2022.csv") %>% mutate(Lineage = recode(Lineage, FI="CL1", NEH="CL2")) %>%
mutate(Type = ifelse(Lineage == "CL1" | Lineage == "CL2", "Commercial", "Wild"))
disease_intensity <- Disease %>%
subset(Sample.ID != 'NR-209') %>%
group_by(Lineage, Type) %>%
mutate(Dermo_Infected = ifelse(Dermo.Cq > 0, 1, 0)) %>%
mutate(MSX_Infected = ifelse(Dermo.Cq > 0, 1, 0)) %>%
mutate(SSO_Infected = ifelse(SSO.Cq > 0, 1, 0)) %>%
summarize(Dermo_Intensity = sum(Dermo_Infected/n()), MSX_Intensity = sum(MSX_Infected/n()), SSO_Intensity = sum(SSO_Infected/n()))
View(disease_intensity)
View(Disease)
rm(disease_intensity)
library(tidyverse)
#Reading in disease data
Disease <- read.csv("Disease2022.csv") %>% mutate(Lineage = recode(Lineage, FI="CL1", NEH="CL2")) %>%
mutate(Type = ifelse(Lineage == "CL1" | Lineage == "CL2", "Commercial", "Wild"))
#Calculating disease prevalence
disease_prevalence <- Disease %>%
subset(Sample.ID != 'NR-209') %>%
group_by(Lineage, Type) %>%
mutate(Dermo_Infected = ifelse(Dermo.Cq > 0, 1, 0)) %>%
mutate(MSX_Infected = ifelse(Dermo.Cq > 0, 1, 0)) %>%
mutate(SSO_Infected = ifelse(SSO.Cq > 0, 1, 0))
View(disease_prevalence)
library(tidyverse)
library(dplyr)
NIN_Size <- read.csv("NIN_End.csv")%>%
select(Line, Bag.Number, Oyster.Number, Length) %>%
mutate(Type = ifelse(Line == "CL1" | Line == "CL2", "Commercial", "Wild")) %>%
filter(!is.na(Length)) %>%
rename(Bag = Bag.Number, Oyster = Oyster.Number) %>%
mutate(Bag = as.factor(Bag)) %>%
mutate(Oyster = as.factor(Oyster)) %>%
group_by(Line, Bag) %>%
mutate(Site = "Ninigret") %>%
mutate(Year = "2023")
WIC_Size <- read.csv("WIC_End.csv")%>%
select(Line, Bag.., Oyster.., Length) %>%
mutate(Type = ifelse(Line == "CL1" | Line == "CL2", "Commercial", "Wild")) %>%
filter(!is.na(Length)) %>%
rename(Bag = Bag.., Oyster = Oyster..) %>%
mutate(Bag = as.factor(Bag)) %>%
mutate(Oyster = as.factor(Oyster)) %>%
group_by(Line, Bag) %>%
mutate(Site = "Wickford") %>%
mutate(Year = "2023")
RWU_Size <- read.csv("RWU.csv") %>%
#Renaming commercial lines to keep them anonymous
mutate(Line = recode(Line, FI="CL1", NEH="CL2")) %>%
#Fixing a mistake in the sheet where lineage was accidentally entered as "Mv" instead of "MV"
mutate(Line = recode(Line, Mv="MV")) %>%
#Keeping only oysters recored at the end of the study.
filter(Date == "19-Oct-22") %>%
#Removing oysters with missing tags
filter(Pit.Tag.End.Num != "no tag") %>%
filter(!is.na(Length)) %>%
#Keeping only relevant information
select(Date, Line, Length, Bag.Number, Status, Pit.Tag.End.Num) %>%
#Defining oysters as either wild or commercial
mutate(Type = ifelse(Line == "CL1" | Line == "CL2", "Commercial", "Wild")) %>%
mutate(Bag = as.factor(Bag.Number)) %>%
mutate(Oyster = Pit.Tag.End.Num) %>%
filter(Line != "NR") %>%
filter(Line != "CT") %>%
mutate(Survived = ifelse(Status == "Alive" | Status == "alive" | Status =="alive, no pic", 1, 0)) %>%
mutate(Survived = as.numeric(Survived)) %>%
mutate(Length = as.numeric(Length)) %>%
filter(!is.na(Length)) %>%
filter(Survived != 0) %>%
mutate(Year = "2022") %>%
mutate(Site = "RWU") %>%
select(Line, Bag, Oyster, Length, Type, Site, Year)
All_data <- rbind(NIN_Size, RWU_Size, WIC_Size) %>% rename(Population = Line)
Data_2023 <- rbind(NIN_Size, WIC_Size) %>% rename(Population = Line)
library(dunn.test)
shapiro.test(All_data$Length)
kruskal.test(All_data$Length ~ All_data$Population)
dunn.test(All_data$Length, g = All_data$Population, method  = "bonferroni")
shapiro.test(All_data$Length)
kruskal.test(All_data$Length ~ All_data$Site)
dunn.test(All_data$Length, g = All_data$Site, method  = "bonferroni")
PopandSite2023 <- lm(log(Length) ~ Site+Population, data = Data_2023)
PopxSite2023 <- lm(log(Length) ~ Site*Population, data = Data_2023)
summary(PopxSite2023)
anova(PopandSite2023, PopxSite2023)
PopandSite <- lm(log(Length) ~ Site+Population, data = All_data)
PopxSite <- lm(log(Length) ~ Site*Population, data = All_data)
summary(PopxSite)
anova(PopandSite, PopxSite)
WIC_Surv <- read.csv("WIC_Survival.csv")
NIN_Surv <- read.csv("NIN_Survival.csv")
RWU_Surv <- read.csv("RWU_Survival.csv")
All_Surv <- rbind(WIC_Surv, NIN_Surv, RWU_Surv)
Surv_2023 <- rbind(WIC_Surv, NIN_Surv)
library(survival)
library(PAmeasures)
SurvPop <- survreg(Surv(Age, Status) ~ Population, data = All_Surv, dist = "weibull")
summary(SurvPop)
SurvSite <- survreg(Surv(Age, Status) ~ Site, data = All_Surv, dist = "weibull")
summary(SurvSite)
SurvPopandSite <- survreg(Surv(Age, Status) ~ Population+Site, data = All_Surv, dist = "weibull")
SurvPopxSite <- survreg(Surv(Age, Status) ~ Population*Site, data = All_Surv, dist = "weibull")
summary(SurvPopxSite)
fitted_values <- SurvPopxSite$linear.predictors
resids <- (log(SurvPopxSite$y[, 1]) - fitted_values) / SurvPopxSite$scale
resKM <- survfit(Surv(resids, Status) ~ 1, data = All_Surv)
plot(resKM, mark.time = FALSE, xlab = "AFT Residuals", ylab = "Survival Probability")
xx <- seq(min(resids), max(resids), length.out = 35)
yy <- exp(- exp(xx))
lines(xx, yy, col = "red", lwd = 2)
legend("bottomleft", c("KM estimate", "95% CI KM estimate",
"Survival function of Extreme Value distribution"),
lty = c(1,2,1), col = c(1,1,2), bty = "n")
p <- predict(SurvPopxSite, type = "response")
with(All_Surv, pam.censor(Age, p, Status))
anova(SurvPopandSite, SurvPopxSite)
library(survival)
library(PAmeasures)
SurvPopandSite2023 <- survreg(Surv(Age, Status) ~ Population+Site, data = Surv_2023, dist = "weibull")
SurvPopxSite2023 <- survreg(Surv(Age, Status) ~ Population*Site, data = Surv_2023, dist = "weibull")
p <- predict(SurvPopxSite2023, type = "response")
with(Surv_2023, pam.censor(Age, p, Status))
summary(SurvPopxSite2023)
library(tidyverse)
#Reading in disease data
Disease <- read.csv("Disease2022.csv") %>% mutate(Lineage = recode(Lineage, FI="CL1", NEH="CL2")) %>%
mutate(Type = ifelse(Lineage == "CL1" | Lineage == "CL2", "Commercial", "Wild"))
#Calculating disease prevalence
disease_prevalence <- Disease %>%
subset(Sample.ID != 'NR-209') %>%
group_by(Lineage, Type) %>%
mutate(Dermo_Infected = ifelse(Dermo.Intensity > 0, 1, 0)) %>%
mutate(MSX_Infected = ifelse(Dermo.Intensity > 0, 1, 0)) %>%
mutate(SSO_Infected = ifelse(SSO.Intensity > 0, 1, 0))
View(disease_prevalence)
shapiro.test(Disease$Dermo.Intensity)
kruskal.test(Disease$Dermo.Intensity ~ Disease$Lineage)
dunn.test(disease$`Dermo Intensity`, g = disease$Lineage, method  = "bonferroni")
shapiro.test(Disease$Dermo.Intensity)
kruskal.test(Disease$Dermo.Intensity ~ Disease$Lineage)
dunn.test(Disease$Dermo.Intensity, g = Disease$Lineage, method  = "bonferroni")
shapiro.test(Disease$MSX.Intensity)
kruskal.test(Disease$MSX.Intensity ~ Disease$Lineage)
dunn.test(Disease$MSX.Intensity, g = Disease$Lineage, method  = "bonferroni")
ggplot(Disease, aes(x= Lineage, y=Dermo.Intensity, fill = Type))+
geom_boxplot()+
ggtitle("Dermo Intensity at 19 Months")
ggplot(Disease, aes(x= Lineage, y=MSX.Intensity, fill = Type))+
geom_boxplot()+
ggtitle("MSX Intensity at 19 Months")
ggplot(Disease, aes(x= Lineage, y=Dermo.Intensity, fill = Type))+
geom_boxplot()+
ggtitle("Dermo Intensity at 19 Months")
ggplot(Disease, aes(x= Lineage, y=MSX.Intensity, fill = Type))+
geom_boxplot()+
ylim(0,5)+
ggtitle("MSX Intensity at 19 Months")
library(tidyverse)
#Reading in disease data
Disease <- read.csv("Disease2022.csv") %>% mutate(Lineage = recode(Lineage, FI="CL1", NEH="CL2")) %>%
mutate(Type = ifelse(Lineage == "CL1" | Lineage == "CL2", "Commercial", "Wild")) %>%
#Creating columns for disease prevalence
subset(Sample.ID != 'NR-209') %>%
group_by(Lineage, Type) %>%
mutate(Dermo_Infected = ifelse(Dermo.Intensity > 0, 1, 0)) %>%
mutate(MSX_Infected = ifelse(Dermo.Intensity > 0, 1, 0)) %>%
mutate(SSO_Infected = ifelse(SSO.Intensity > 0, 1, 0))
shapiro.test(Disease$Dermo.Intensity)
kruskal.test(Disease$Dermo.Intensity ~ Disease$Lineage)
dunn.test(Disease$Dermo.Intensity, g = Disease$Lineage, method  = "bonferroni")
shapiro.test(Disease$MSX.Intensity)
kruskal.test(Disease$MSX.Intensity ~ Disease$Lineage)
dunn.test(Disease$MSX.Intensity, g = Disease$Lineage, method  = "bonferroni")
ggplot(Disease, aes(x= Lineage, y=Dermo.Intensity, fill = Type))+
geom_boxplot()+
ggtitle("Dermo Intensity at 19 Months")
ggplot(Disease, aes(x= Lineage, y=MSX.Intensity, fill = Type))+
geom_boxplot()+
ylim(0,5)+
ggtitle("MSX Intensity at 19 Months")
shapiro.test(Disease$Dermo_Infected)
kruskal.test(Disease$Dermo_Infected ~ Disease$Lineage)
dunn.test(Disease$Dermo_Infected, g = Disease$Lineage, method  = "bonferroni")
library(dunn.test)
shapiro.test(Disease$Dermo_Infected)
kruskal.test(Disease$Dermo_Infected ~ Disease$Lineage)
dunn.test(Disease$Dermo_Infected, g = Disease$Lineage, method  = "bonferroni")
shapiro.test(Disease$MSX_Infected)
kruskal.test(Disease$MSX_Infected ~ Disease$Lineage)
dunn.test(Disease$MSX_Infected, g = Disease$Lineage, method  = "bonferroni")
shapiro.test(Disease$Dermo_Infected)
kruskal.test(Disease$Dermo_Infected ~ Disease$Lineage)
shapiro.test(Disease$MSX_Infected)
kruskal.test(Disease$MSX_Infected ~ Disease$Lineage)
